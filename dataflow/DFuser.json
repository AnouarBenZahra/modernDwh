{
	"name": "DFuser",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SynapseDboUser",
						"type": "DatasetReference"
					},
					"name": "srcUser"
				},
				{
					"dataset": {
						"referenceName": "SynapseDimUser",
						"type": "DatasetReference"
					},
					"name": "DimUser"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SynapseDimUser",
						"type": "DatasetReference"
					},
					"name": "UpdateDestDimUser"
				},
				{
					"dataset": {
						"referenceName": "SynapseDimUser",
						"type": "DatasetReference"
					},
					"name": "InsertDestDimUser"
				},
				{
					"dataset": {
						"referenceName": "SynapseDimUser",
						"type": "DatasetReference"
					},
					"name": "dstUser"
				},
				{
					"dataset": {
						"referenceName": "SynapseDimUser",
						"type": "DatasetReference"
					},
					"name": "UpdateOldRows"
				}
			],
			"transformations": [
				{
					"name": "Join"
				},
				{
					"name": "AlterRow"
				},
				{
					"name": "AlterInsertNewRows"
				},
				{
					"name": "SelectExisting"
				},
				{
					"name": "FilterActiveRows"
				},
				{
					"name": "AlterUpdateOldRows"
				},
				{
					"name": "DrvStartEndDate"
				},
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "\n\nsource(output(\n\t\t{_AccountId} as long,\n\t\t{_CreationDate} as string,\n\t\t{_DisplayName} as string,\n\t\t{_DownVotes} as long,\n\t\t{_Id} as long,\n\t\t{_LastAccessDate} as string,\n\t\t{_Location} as string,\n\t\t{_ProfileImageUrl} as string,\n\t\t{_Reputation} as long,\n\t\t{_UpVotes} as long,\n\t\t{_Views} as long,\n\t\t{_WebsiteUrl} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> srcUser\nsource(output(\n\t\tUserId as integer,\n\t\tUserSk as integer,\n\t\tAccountId as integer,\n\t\tReputation as integer,\n\t\tCreationDate as timestamp,\n\t\tDisplayName as string,\n\t\tLastAccessDate as timestamp,\n\t\tWebsiteUrl as string,\n\t\tLocation as string,\n\t\tUpVotes as integer,\n\t\tDownVotes as integer,\n\t\tProfileImageUrl as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimUser\nsrcUser, SelectExisting join({_Id} == Existing_UserSk,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join\nConditionalSplit1@SCD1 alterRow(updateIf(true())) ~> AlterRow\nConditionalSplit1@SCD2 alterRow(insertIf(true())) ~> AlterInsertNewRows\nFilterActiveRows select(mapColumn(\n\t\tExisting_UserId = UserId,\n\t\tExisting_UserSk = UserSk,\n\t\tExisting_AccountId = AccountId,\n\t\tExisting_Reputation = Reputation,\n\t\tExisting_CreationDate = CreationDate,\n\t\tExisting_DisplayName = DisplayName,\n\t\tExisting_LastAccessDate = LastAccessDate,\n\t\tExisting_WebsiteUrl = WebsiteUrl,\n\t\tExisting_Location = Location,\n\t\tExisting_UpVotes = UpVotes,\n\t\tExisting_DownVotes = DownVotes,\n\t\tExisting_ProfileImageUrl = ProfileImageUrl\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectExisting\nDimUser filter(isNull(EndDate)) ~> FilterActiveRows\nConditionalSplit1@SCD2 alterRow(updateIf(true())) ~> AlterUpdateOldRows\nJoin derive(NewStartDate = currentUTC(),\n\t\tNewEndDate = currentUTC()) ~> DrvStartEndDate\nDrvStartEndDate split(!isNull(Existing_UserId)\r\n&& {_Location} != Existing_Location,\n\t!isNull(Existing_UserId)\r\n&&\r\n(\r\n    {_AccountId} != Existing_AccountId\r\n    || {_DisplayName} !=  Existing_DisplayName\r\n),\n\tisNull(Existing_UserId),\n\tdisjoint: false) ~> ConditionalSplit1@(SCD2, SCD1, NewRows)\nAlterRow sink(input(\n\t\tUserId as integer,\n\t\tUserSk as integer,\n\t\tAccountId as integer,\n\t\tReputation as integer,\n\t\tCreationDate as timestamp,\n\t\tDisplayName as string,\n\t\tLastAccessDate as timestamp,\n\t\tWebsiteUrl as string,\n\t\tLocation as string,\n\t\tUpVotes as integer,\n\t\tDownVotes as integer,\n\t\tProfileImageUrl as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['AccountId'],\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tAccountId = {_AccountId},\n\t\tReputation = {_Reputation},\n\t\tCreationDate = {_CreationDate},\n\t\tDisplayName,\n\t\tLastAccessDate = {_LastAccessDate},\n\t\tWebsiteUrl = {_WebsiteUrl},\n\t\tUpVotes = {_UpVotes},\n\t\tDownVotes = {_DownVotes},\n\t\tProfileImageUrl = {_ProfileImageUrl},\n\t\tUserSk = {_Id}\n\t)) ~> UpdateDestDimUser\nAlterInsertNewRows sink(input(\n\t\tUserId as integer,\n\t\tUserSk as integer,\n\t\tAccountId as integer,\n\t\tReputation as integer,\n\t\tCreationDate as timestamp,\n\t\tDisplayName as string,\n\t\tLastAccessDate as timestamp,\n\t\tWebsiteUrl as string,\n\t\tLocation as string,\n\t\tUpVotes as integer,\n\t\tDownVotes as integer,\n\t\tProfileImageUrl as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['UserId'],\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tUserSk = {_Id},\n\t\tReputation = Existing_Reputation,\n\t\tCreationDate = Existing_CreationDate,\n\t\tDisplayName = Existing_DisplayName,\n\t\tLastAccessDate = Existing_LastAccessDate,\n\t\tWebsiteUrl = Existing_WebsiteUrl,\n\t\tLocation = {_Location},\n\t\tUpVotes = Existing_UpVotes,\n\t\tDownVotes = Existing_DownVotes,\n\t\tProfileImageUrl = Existing_ProfileImageUrl,\n\t\tAccountId = Existing_AccountId,\n\t\tStartDate = NewStartDate\n\t)) ~> InsertDestDimUser\nConditionalSplit1@NewRows sink(input(\n\t\tUserId as integer,\n\t\tUserSk as integer,\n\t\tAccountId as integer,\n\t\tReputation as integer,\n\t\tCreationDate as timestamp,\n\t\tDisplayName as string,\n\t\tLastAccessDate as timestamp,\n\t\tWebsiteUrl as string,\n\t\tLocation as string,\n\t\tUpVotes as integer,\n\t\tDownVotes as integer,\n\t\tProfileImageUrl as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tUserSk = {_Id},\n\t\tReputation = {_Reputation},\n\t\tCreationDate = {_CreationDate},\n\t\tDisplayName = {_DisplayName},\n\t\tLastAccessDate = {_LastAccessDate},\n\t\tWebsiteUrl = {_WebsiteUrl},\n\t\tLocation = {_Location},\n\t\tUpVotes = {_UpVotes},\n\t\tDownVotes = {_DownVotes},\n\t\tProfileImageUrl = {_ProfileImageUrl},\n\t\tAccountId = {_AccountId}\n\t)) ~> dstUser\nAlterUpdateOldRows sink(input(\n\t\tUserId as integer,\n\t\tUserSk as integer,\n\t\tAccountId as integer,\n\t\tReputation as integer,\n\t\tCreationDate as timestamp,\n\t\tDisplayName as string,\n\t\tLastAccessDate as timestamp,\n\t\tWebsiteUrl as string,\n\t\tLocation as string,\n\t\tUpVotes as integer,\n\t\tDownVotes as integer,\n\t\tProfileImageUrl as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Existing_UserId'],\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tEndDate = NewEndDate,\n\t\tUserId = Existing_UserId\n\t)) ~> UpdateOldRows"
		}
	}
}